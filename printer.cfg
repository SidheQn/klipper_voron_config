[include fluidd.cfg]
[include Use_ShakeTune.cfg]
#[include input_shaping.cfg] #### Need to enable both of these

[include start_macro.cfg]
#[include cancel.cfg]
[include temperatures.cfg]
[include bed_mesh.cfg]
[include Adaptive_Mesh.cfg]

[include brush-nozzle.cfg]
######## [include klicky-probe.cfg] ## Uncomment if things break
######## [include klicky-z-calibration.cfg] ## Uncomment if things break
[include use_beacon.cfg]
#[include use_klicky.cfg]

[include spicy.cfg]

[include config_backup.cfg]

## For K.A.M.P.
[exclude_object]

### [gcode_macro _CLIENT_VARIABLE] ## for the CANCEL_PRINT macro in mainsail.cfg
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
### variable_cancel_retract   : 25.0   ; the value to retract while CANCEL_PRINT
### variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
### gcode:

### PID_CALIBRATE HEATER=extruder TARGET=N ###

[virtual_sdcard]
path: /home/voron/printer_data/gcodes
#path: /home/osiris/Piper2v2_data/gcodes
on_error_gcode: CANCEL_PRINT

# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/{REPLACE WITH YOUR SERIAL}
### serial: /dev/serial/by-path/platform-fe3e0000.usb-usb-0:1:1.0
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_1F003D000B50533850353920-if00
restart_method: command
##--------------------------------------------------------------------

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

### [input_shaper]
### shaper_freq_x: 64.8 # center frequency for the X axis filter      max 7070 X
### shaper_type_x: ei # filter type for the X axis
### damping_ratio_x: 0.043 # damping ratio for the X axis
### shaper_freq_y: 49.2 # center frequency for the Y axis filter      max  7700 Y
### shaper_type_y: mzv # filter type for the Y axis
### damping_ratio_y: 0.051 # damping ratio for the Y axis

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 7000             # Max 7800 as per InputShaper

#
#variable_cancel_retract   : 35.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s



#max_accel_to_decel: 10000
#minimum_cruise_ratio: 0.5
#   Most moves will accelerate to a cruising speed, travel at that
#   cruising speed, and then decelerate. However, some moves that
#   travel a short distance could nominally accelerate and then
#   immediately decelerate. This option reduces the top speed of these
#   moves to ensure there is always a minimum distance traveled at a
#   cruising speed. That is, it enforces a minimum distance traveled
#   at cruising speed relative to the total distance traveled. It is
#   intended to reduce the top speed of short zigzag moves (and thus
#   reduce printer vibration from these moves). For example, a
#   minimum_cruise_ratio of 0.5 would ensure that a standalone 1.5mm
#   move would have a minimum cruising distance of 0.75mm. Specify a
#   ratio of 0.0 to disable this feature (there would be no minimum
#   cruising distance enforced between acceleration and deceleration).
#   The value specified here may be changed at runtime using the
#   SET_VELOCITY_LIMIT command. The default is 0.5.


max_z_velocity: 20          # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
# endstop_pin: PG6          ## Microswitch on Octopus
## endstop_pin: can0:PB5          ## CanBus
endstop_pin: tmc2209_stepper_x:virtual_endstop          ## Sensorless
homing_speed: 80   #Max 100, 20 for Sensorless
# homing_retract_dist: 5          ## Microswitch setting
use_sensorless_homing: True

position_min: 0
position_endstop: 303         ## Sensorles. Revert to 299 for microswitch
position_max: 303
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
# run_current: 0.8
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG6           ## Sensorless
driver_SGTHRS: 120
# driver_SGTHRS: 100 ## 115 64 micro ## 130 32 micro         ## Sensorless 255 test


##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
# endstop_pin: PG9          ## Microswitch on Octopus
endstop_pin: tmc2209_stepper_y:virtual_endstop          ## Sensorless
homing_speed: 80  #Max 100, 20 for Sensorless
# homing_retract_dist: 5          ## Microswitch setting
use_sensorless_homing: True

position_min: 0
position_endstop: 309
position_max: 309
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
# run_current: 0.8
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9           ## Sensorless
driver_SGTHRS: 135  
# driver_SGTHRS: 100 ## 115 64 micro ## 130 32 micro          ## Sensorless 255 test


##### The Sensorless homing calibration process is: #####

# For TMC2209, start with SET_TMC_FIELD FIELD=SGTHRS STEPPER=stepper_x VALUE=255 in the console. For TMC2130/TMC2660/TMC5160, use SET_TMC_FIELD FIELD=SGT STEPPER=stepper_x VALUE=-64 instead.

# Start with the most sensitive value for the StallGuard threshold based on which kind of TMC driver youâ€™re using (255 for TMC2209, or -64 for TMC2130/TMC2660/TMC5160).
# Try running G28 X0 to see if the toolhead moves along the X axis.
# If your toolhead moves all the way to the end of the rail, IMMEDIATELY HIT THE EMERGENCY STOP BUTTON.
# Go back and double-check that you have configured your hardware and the Klipper sections above correctly. Ask on Discord if you need help.

# When running the G28 X0 or G28 Y0 command, the toolhead WILL move ever so slightly before it triggers the virtual endstop. This is normal.
# After triggering the toolhead will also move 10mm beck in the opposite direction. for example: if you stallguard value is too high you may observe the toolhead only moving 10mm to the left.
# This is expected and simply means your stallguard value is still too sensative for the toolhead to overcome the resistance in the beltpath.
# As described above when you first start trying to find your value, it will look like the toolhead is moving away from the right rail, then stopping.
# This is normal and just means the value is still too sensitive to home properly. Early on, you can jump down in jumps of 50.
# To change the stallguard value quickly simply enter SET_TMC_FIELD FIELD=SGTHRS STEPPER=stepper_x VALUE=XXX into the console, replacing the XXX with your desired stallgurad value to test.
# This command only overwrites the value temporarily so when you are finished it will have to be updated in your actual printer.cfg file.

# At some point you will get X to home all the way to the rail. However, if you went TOO low, it might bump harder into the rail than it should. In this case, split the difference and try homing the axis again.

# Eventually you will find the BIGGEST number that homes X successfully. Nice! With the maximum found, continue to DECREASE the value by 5 or so until X homes,
# but bumps too hard into the rail. You may need to walk this in by changing the value by 1 when getting close. This is your MINIUMUM value.
# Ideally we want to hard code a final value between the minimum and maximum that will always work, it is best to shoot for something slightly LESS than halfway between minimum and maximum.

# Example: If maximum is 113 and minimum is 99, the difference is 14. Half of 14 is 7, so use a value of 99+6, or 105.
# If that looks and feels good, you now have the driver value that you need in order to update your printer.cfg fileâ€™s [tmc2209 stepper_x] section.
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 1.751
##--------------------------------------------------------------------

##  Uncomment below for 300mm build
#position_max: 280
position_max: 160 ## 220 ## 250

##--------------------------------------------------------------------
position_min: -5
homing_speed: 5
second_homing_speed: 3

### endstop_pin: PG10
### homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
### interpolate: false ### Uncomment if stealthchop_threshold is 0
run_current: 1.0
sense_resistor: 0.110
# stealthchop_threshold: 0
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
### interpolate: false
run_current: 1.0
sense_resistor: 0.110
# stealthchop_threshold: 0
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
### interpolate: false
run_current: 1.0
sense_resistor: 0.110
# stealthchop_threshold: 0
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
### interpolate: false
run_current: 1.0
sense_resistor: 0.110
# stealthchop_threshold: 0
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
#### step_pin: PE2
### dir_pin: !PE3      ## Orbiter
#### dir_pin: PE3        ## Clockwork 2
#### enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point

##  CANBUS   ##
step_pin: PE2 ## can0:EXT_STEP
dir_pin: !PE3 ## !can0:EXT_DIR
enable_pin: !PD4 ##!can0:EXT_EN

### ### rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears - original suggested
rotation_distance: 23.177888024    ### Calculated ### Clockwork2 calculated
##### rotation_distance: 4.67242794       ### Orbiter Calibration distance

##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
# gear_ratio: 50:17               # BMG Gear Ratio (not used)
gear_ratio: 50:10                 # Per Voron Stealthburner suggested in initial setup for CW2
# gear_ratio: 75:10               # Orbiter 1.5 advertised gear ratio

microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
### sensor_type: ATC Semitec 104GT-2 ### Revo6 60w 
sensor_type: PT1000 ### Dragon UHF
## pullup_resistor: 2200 ## 2175 brings it to match the bed thermistor ## 2200 originally ## for Canbus
#### sensor_pin: PF4
sensor_pin: PF4 ## can0:PA3
#sensor_pin: ^can0:PA3
min_temp: 10
max_temp: 450
max_power: 1.0
pwm_cycle_time: 0.01666 #1/60th second = 60hz power cycle

### Orbiter ###
#rotation_distance: 4.5714 # (200fsprx16ms)/700spmm
#rotation_distance: 4.67242794 ### Calibration distance
#microsteps: 16
#full_steps_per_rotation: 200 # 360/1.8sd
#run_current: 0.35
#hold_current: 0

max_extrude_only_distance: 100.0
## min_extrude_temp: 20 ### For Calibration Only ## DO NOT RUN WITH THIS ### ### ###
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.02
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
#### uart_pin: PE1
uart_pin: PE1 ## can0:EXT_UART
interpolate: false
# run_current: 0.35
run_current: 0.5 ## 0.35 originally
sense_resistor: 0.100 ## 0.110 default
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
# max_power: 0.6
max_power: 0.90
min_temp: 0
max_temp: 150

pwm_cycle_time: 0.01666 #1/60th second = 60hz power cycle

#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[verify_heater heater_bed]
max_error: 130
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 90
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#####################################################################
#   Probe
#####################################################################

######## [probe] ## Uncomment if things break
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
#pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5
#####pin: ~PC5
######## pin: PG11 ## Uncomment if things break
#### pin: can0:PB6
#--------------------------------------------------------------------

#x_offset: 0
######## x_offset: -1.95 ## Uncomment if things break
### y_offset: 25.0
######## y_offset: 24.0 ## Uncomment if things break

#z_offset: 0

#speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
#samples: 1
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
#sample_retract_dist: 2.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
#lift_speed:
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
#samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 0
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.

######## speed: 5.0 ## Uncomment if things break
######## lift_speed: 8.0 ## Uncomment if things break
######## samples: 5 ## was 7 ## Uncomment if things break
######## samples_result: average ## was median ## Uncomment if things break
######## sample_retract_dist: 2.0 ## Uncomment if things break
######## samples_tolerance: 0.07 ## Uncomment if things break
######## samples_tolerance_retries: 5 ## Uncomment if things break

#####################################################################
#   Fan Control
#####################################################################


[fan]
##  Print Cooling Fan - FAN0
pin: PA8 ## can0:PA1 ## orig PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
# off_below: 0.10
min_power: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: PE5 ## can0:PA0 ## orig PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

## [multi_pin my_controller_fan_pins] ### Changed for Spicy ###
## pins: PD12, PD13

## [controller_fan controller_fan]
### pin: PD12
## pin: multi_pin:my_controller_fan_pins
## kick_start_time: 0.5
#fan_speed: 0.85
## fan_speed: 0.9
## heater: heater_bed ### Changed for Spicy ###

### [duplicate_pin_override]
### pins: PD12, PD13
#   A comma separated list of pins that may be used multiple times in
#   a config file without normal error checks. This parameter must be
#   provided.

### [multi_pin orangepi4_fan_pins]
### pins: PD12, PD13

### [temperature_fan OrangePi_fan]

### pin: multi_pin:orangepi4_fan_pins
### sensor_type: temperature_host
### control: watermark
### min_temp: 35
### max_temp: 45
### target_temp: 37

## [multi_pin nevermore] ## Old setup
## pins: PD14, PD15

[fan_generic Nevermore]
pin: PD14
### pin: multi_pin:nevermore

# added from nevermore github
[menu __main __control __nevermoreonoff]
type: command
name: Nevermore {'ON' if printer['fan_generic Nevermore'].speed > 0 else 'OFF'}
enable: {'fan_generic Nevermore' in printer}
gcode:
    TOGGLE_NEVERMORE

[menu __main __control __filterspeed]
type: input
enable: {'fan_generic Nevermore' in printer}
name: Filter %: {'%3d' % (menu.input*100)}%
input: {printer["fan_generic Nevermore"].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=Nevermore SPEED={menu.input}

[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=Nevermore SPEED=0

[gcode_macro TOGGLE_NEVERMORE]
gcode:
    {% if printer['fan_generic Nevermore'].speed > 0 %}
      SET_FAN_SPEED FAN=Nevermore SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=Nevermore SPEED=1
    {% endif %}
# added from nevermore github

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
#timeout: 600 ## 10 min
#timeout: 1800 ## 30 min
timeout: 3600 ## 60 min
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".

#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
### speed:200
#home_xy_position: 204, 297.5 ## 199,299 # 204,310 Old
#z_hop:15

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
gantry_corners:
   -75,-22 ## -60,-10 ## 0,50 + (-75,-72)
   365,392 ## 360,370 ## 300,280 + (65,112)
#  Probe points
points: ## Original
   50,25
   50,225
   250,225
   250,25
##points: ## Testing
##   30,30
##   30,220
##   270,220
##   270,30

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
#gantry_corners:
#   -60,-10
#   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.05
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#[output_pin beeper]
#pin: EXP1_1


[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 
###        SET_LED LED="btt_mini12864" RED=0.1569 GREEN=0.6431 BLUE=0.8706 SYNC=0 TRANSMIT=1
#        SET_LED LED="btt_mini12864" RED=0.0375 GREEN=0.160 BLUE=0.220 SYNC=0 TRANSMIT=1
###        SET_LED LED="btt_mini12864" RED=0.50 GREEN=0.10 BLUE=0.4 SYNC=0 TRANSMIT=1
        SET_LED LED="btt_mini12864" RED=0.250 GREEN=0.050 BLUE=0.200 SYNC=0 TRANSMIT=1

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a secondâ€¦ (give StallGuard registers time to clear)
    M400 # originally G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a secondâ€¦ (give StallGuard registers time to clear)
    M400 # originally G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    
[gcode_macro G32]
gcode:
    ##status_homing
    G28
    ##status_leveling
    QUAD_GANTRY_LEVEL
    ##status_homing
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    ##status_ready
### [gcode_macro PRINT_START] <--- Moved to separate cfg file
### #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
### gcode:
###     G32                            ; home all axes
###     G1 Z20 F3000                   ; move nozzle away from bed
###     status_printing

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    # G1 E-5.0 F1800                 ; retract filament
    G1 E-5.0 F2400                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    ## G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    G0 X{th.axis_maximum.x -20} Y{th.axis_maximum.y - 5} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=600 ; turn off Nevermore after 600 seconds
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
#    SET_DISPLAY_TEXT MSG="Finished"
    SET_DISPLAY_TEXT MSG=""
    ##status_ready

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.941
#*# pid_ki = 1.587
#*# pid_kd = 106.033
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 49.342
#*# pid_ki = 1.158
#*# pid_kd = 525.494
#*#
#*# [stepper_z]
#*# position_endstop = 1.755
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.018750, 0.006250, 0.031250, 0.027500, -0.023750
#*# 	0.027500, -0.001250, 0.005000, 0.032500, -0.025000
#*# 	0.013750, 0.008750, 0.000000, 0.026250, 0.016250
#*# 	-0.003750, -0.038750, -0.023750, 0.013750, -0.000000
#*# 	-0.008750, -0.035000, -0.007500, 0.002500, -0.002500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 40.0
#*# max_y = 260.0
#*#
#*# [beacon model default]
#*# model_coef = 1.5123918057933687,
#*# 	  1.862543290323141,
#*# 	  0.7692884621888657,
#*# 	  0.25968853961681665,
#*# 	  0.515499454044201,
#*# 	  0.8746799773530651,
#*# 	  -0.417348059215586,
#*# 	  -1.063447938783779,
#*# 	  0.22029385884669328,
#*# 	  0.46872706764380734
#*# model_domain = 1.836505094189074e-07,1.9292298115144777e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 24.050145
#*# model_offset = 0.00000
